import asyncio
from flask import Flask, request
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackQueryHandler,
    ContextTypes,
)
from io import BytesIO
from fpdf import FPDF
from datetime import datetime

# === –¢–í–û–ò –î–ê–ù–ù–´–ï ===
TOKEN = "7511704960:AAFKDWgg2-cAzRxywX1gXK47OQRWJi72qGw"
WEBHOOK_URL = "https://final-bot1-0.onrender.com/webhook"
PORT = 5000

# Flask —Å–µ—Ä–≤–µ—Ä
app = Flask(__name__)

# Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
application = Application.builder().token(TOKEN).build()

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")],
        [InlineKeyboardButton("üìÑ –ü–æ–ª—É—á–∏—Ç—å PDF", callback_data="generate_pdf")],
        [InlineKeyboardButton("‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about_bot")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç!\n\n–Ø –º–æ–≥—É —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–π PDF —Ñ–∞–π–ª –¥–ª—è —Ç–µ–±—è!\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ üëá",
        reply_markup=reply_markup,
    )

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF
async def generate_pdf(user_name):
    pdf = FPDF()
    pdf.add_page()
    pdf.set_font("Arial", size=16)

    date_today = datetime.now().strftime("%d.%m.%Y")

    pdf.cell(0, 10, f"–î–æ–∫—É–º–µ–Ω—Ç –¥–ª—è {user_name}", ln=True, align="C")
    pdf.ln(10)
    pdf.set_font("Arial", size=12)
    pdf.cell(0, 10, f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {date_today}", ln=True, align="C")
    pdf.ln(20)
    pdf.set_font("Arial", size=10)
    pdf.multi_cell(0, 10, "–≠—Ç–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –±–æ—Ç–æ–º. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º!")

    buffer = BytesIO()
    pdf.output(buffer)
    buffer.seek(0)
    return buffer

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "main_menu":
        await query.edit_message_text(
            "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üìÑ –ü–æ–ª—É—á–∏—Ç—å PDF", callback_data="generate_pdf")],
                [InlineKeyboardButton("‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about_bot")]
            ])
        )
    elif query.data == "about_bot":
        await query.edit_message_text(
            "ü§ñ –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –ª–µ—Ç—É!\n\n"
            "–°–æ–∑–¥–∞—Ç–µ–ª—å: –¢–´ üî•"
        )
    elif query.data == "generate_pdf":
        user_name = query.from_user.full_name
        pdf_buffer = await generate_pdf
